name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup SSH Debug
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        eval $(ssh-agent -s)
        ssh-add -v ~/.ssh/deploy_key
        ssh-keyscan -H 91.105.199.172 >> ~/.ssh/known_hosts
        ls -la ~/.ssh/
        cat ~/.ssh/deploy_key

    - name: Test SSH Connection
      run: ssh -v -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no root@91.105.199.172 'echo "SSH Connection Successful"'

    - name: Copy files to server
      uses: appleboy/scp-action@master
      with:
        host: 91.105.199.172
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "."
        target: "/opt/shop-api"
        debug: true

    - name: Execute deploy commands
      uses: appleboy/ssh-action@master
      with:
        host: 91.105.199.172
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        debug: true
        script: |
          cd /opt/shop-api
          
          # Install Redis if not exists
          if ! command -v redis-server &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y redis-server
            sudo systemctl enable redis-server
            sudo systemctl start redis-server
          fi
          
          # Configure Redis to listen on all interfaces
          sudo sed -i 's/bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf
          sudo systemctl restart redis-server
          
          # Install swag if not exists
          if ! command -v ~/go/bin/swag &> /dev/null; then
            go install github.com/swaggo/swag/cmd/swag@latest
          fi
          
          # Generate Swagger docs
          ~/go/bin/swag init -g cmd/main.go
          
          # Backup DB
          PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} pg_dump -h localhost -U postgres shop > backup_$(date +%Y%m%d_%H%M%S).sql
          
          # Apply migrations
          PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -h localhost -U postgres -d shop -f migrations/001_init.sql
          
          # Build
          go build -o shop-api cmd/main.go
          
          # Restart service
          sudo systemctl restart shop-api
          
          # Verify Swagger
          curl -s http://91.105.199.172:8080/swagger/doc.json | grep host
          
          # Check services
          sudo systemctl status redis-server
          sudo systemctl status shop-api